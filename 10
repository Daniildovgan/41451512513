#include <iostream>

void видалити_блок_з_індексу(int*& масив, int& поточний_розмір, int початковий_індекс, int кількість_елементів) {
    if (початковий_індекс < 0 || початковий_індекс >= поточний_розмір || кількість_елементів <= 0) {
        return;
    }

    int кінець_індекс = початковий_індекс + кількість_елементів;

    if (кінець_індекс > поточний_розмір) {
        кількість_елементів = поточний_розмір - початковий_індекс;
    }

    int новий_розмір = поточний_розмір - кількість_елементів;
    int* новий_масив = new int[новий_розмір];

    int і = 0;
    for (; і < початковий_індекс; ++і) {
        новий_масив[і] = масив[і];
    }

    for (int j = кінець_індекс; j < поточний_розмір; ++і, ++j) {
        новий_масив[і] = масив[j];
    }

    delete[] масив;
    масив = новий_масив;
    поточний_розмір = новий_розмір;
}

int main() {
    const int початковий_розмір = 7;
    int* масив = new int[початковий_розмір] {1, 2, 3, 4, 5, 6, 7};
    int поточний_розмір = початковий_розмір;

    int початковий_індекс = 2;
    int кількість_елементів = 3;

    видалити_блок_з_індексу(масив, поточний_розмір, початковий_індекс, кількість_елементів);

    std::cout << "Новий масив після видалення блоку елементів з індексу " << початковий_індекс 
              << " кількість " << кількість_елементів << ": ";
    for (int і = 0; і < поточний_розмір; ++і) {
        std::cout << масив[і] << " ";
    }
    std::cout << std::endl;

    delete[] масив;

    return 0;
}
